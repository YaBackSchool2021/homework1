openapi: 3.0.3
info:
  title: Family account
  description: Объединение людей в группы для оплаты
  version: 1.0.0
paths:
  /family:
    summary: создание/удаление/обновление семьи
    get:
      operationId: GetFamilyInfo
      parameters:
        - in: query
          name: user_id
          description: Идентификатор группы.
          required: true
          schema:
            $ref: "#/components/schemas/groupId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - IdMaster
                  - IdSlaves
                  - InvitedSlaves
                  - PaymentInfo
                properties:
                  IdMaster:
                    $ref: "#/components/schemas/userId"
                  IdSlaves:
                    $ref: "#/components/schemas/listUserId"
                  InvitedSlaves:
                    $ref: "#/components/schemas/listEmails"
                  PaymentInfo:
                    $ref: "#/components/schemas/paymentInfo"
        403:
          $ref: "#/components/responses/Forbidden"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        404:
          $ref: "#/components/responses/NotFoundResponse"
    post:
      operationId: CreateFamily
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  $ref: "#/components/schemas/userId"
      responses:
        200:
          $ref: "#/components/responses/OKResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        403:
          $ref: "#/components/responses/Forbidden"
    patch:
      operationId: UpdateFamilyInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Action
              properties:
                Action:
                  $ref: "#/components/schemas/Action"
      responses:
        200:
          $ref: "#/components/responses/OKResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        403:
          $ref: "#/components/responses/Forbidden"
    delete:
      operationId: DeleteFamily
      parameters:
        - in: query
          name: user_id
          description: Идентификатор группы.
          required: true
          schema:
            $ref: "#/components/schemas/groupId"
      responses:
        200:
          $ref: "#/components/responses/OKResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        403:
          $ref: "#/components/responses/Forbidden"
        
    
  /add_invited:
    patch:
      operationId: AddUserToFamily
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - groupId
                - userId
              properties:
                groupId:
                  $ref: "#/components/schemas/groupId"
                userId:
                  $ref: "#/components/schemas/userId"
                  
      responses:
        200:
          $ref: "#/components/responses/OKResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        404:
          $ref: "#/components/responses/NotFoundResponse"
  /payment_info:
    get:
      operationId: GetPaymentInfo
      parameters:
        - in: query
          name: user_id
          description: Идентификатор пользователя.
          required: true
          schema:
            $ref: "#/components/schemas/userId"
        - in: query
          name: group_id
          description: Идентификатор группы.
          required: true
          schema:
            $ref: "#/components/schemas/groupId"
      responses:
        200:
          $ref: "#/components/responses/PaymentInfo"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        404:
          $ref: "#/components/responses/NotFoundResponse"
        403:
          $ref: "#/components/responses/NotFoundResponse"
    post:
      operationId: CreatePayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - groupId
                - paymentInfo
              properties:
                groupId:
                  $ref: "#/components/schemas/userId"
                paymentInfo:
                  $ref: "#/components/schemas/paymentInfo"
      responses:
        200:
          $ref: "#/components/responses/OKResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        403:
          $ref: "#/components/responses/Forbidden"
    patch:
      operationId: UpdatePayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - groupId
                - paymentInfo
              properties:
                groupId:
                  $ref: "#/components/schemas/userId"
                paymentInfo:
                  $ref: "#/components/schemas/paymentInfo"
      responses:
        200:
          $ref: "#/components/responses/OKResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        403:
          $ref: "#/components/responses/Forbidden"
components:
  schemas:
    userId:
      type: number
      format: int64
      minimum: 1
      default: 42
    listUserId:
      type: array
      items:
        $ref: "#/components/schemas/userId"
    groupId:
      type: number
      format: int64
      minimum: 1
      default: 42
    
    email:
      type: string
      default: someone@example.com
    listEmails:
      type: array
      items:
        $ref: "#/components/schemas/email"
    paymentInfo:
      type: string
      default: SomePaymentDigits
    actionCode:
      type: number
      format: int64
      minimum: 1
      default: 42
    Action:
      type: object
      required:
        - user
        - action
      properties:
        user:
          type: string
          description: May be email may be userId.
        action:
          $ref: "#/components/schemas/actionCode"
      
  responses:
    OKResponse:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                default: Useful message
    BadRequestResponse:
      description: BadRequest
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                default: Useful message
    NotFoundResponse:
      description: NotFound
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                default: Useful message
    Forbidden:
      description: ForbidenActions
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                default: Useful message
    PaymentInfo:
      description: EncreptedPaymentInfo
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                type: string
                default: info
